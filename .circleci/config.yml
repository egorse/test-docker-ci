# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  test-docker-env:
    # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
    docker:
      # Primary container image where all steps run.
      - image: cimg/base:stable
      # Secondary container image on common network as seen at https://circleci.com/docs/using-docker
      - image: cimg/mariadb:10.6.4
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      - checkout
      # command will execute in an Ubuntu-based container
      # and can access MariaDB on localhost
      - run: sleep 5 && nc -vz localhost 3306
      - run: echo "Done!"

  first-tests:
    docker:
      - image: cimg/base:stable
    steps:
      - run: sleep 10
      - run: echo "Done!"
  second-tests:
    docker:
      - image: cimg/base:stable
    steps:
      - run: sleep 10
      - run: echo "Done!"
  third-tests:
    docker:
      - image: cimg/base:stable
      - image: cimg/mariadb:10.6.4
    steps:
      - run: timeout 30s sh -c 'until nc -vz localhost 3306; do sleep 0.1; done' 
      - run: echo "Done!"

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  default-workflow:
    jobs:
      - test-docker-env
      - first-tests:
          requires:
            - test-docker-env
      - second-tests:
          requires:
            - test-docker-env
      - third-tests:
          requires:
            - test-docker-env
